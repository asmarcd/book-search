[{"C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\index.js":"1","C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\PageContext.js":"2","C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\Header.js":"3","C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\utils\\GBAPI.js":"4","C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\Book.js":"5","C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\PageBody.js":"6","C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\utils\\API.js":"7","C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\Search.js":"8"},{"size":224,"mtime":1608144140239,"results":"9","hashOfConfig":"10"},{"size":336,"mtime":1608216642140,"results":"11","hashOfConfig":"10"},{"size":183,"mtime":1608212557466,"results":"12","hashOfConfig":"10"},{"size":279,"mtime":1608328323967,"results":"13","hashOfConfig":"10"},{"size":5062,"mtime":1608346832562,"results":"14","hashOfConfig":"10"},{"size":441,"mtime":1608216630322,"results":"15","hashOfConfig":"10"},{"size":377,"mtime":1608344687134,"results":"16","hashOfConfig":"10"},{"size":1648,"mtime":1608356403132,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vzt6n3",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\index.js",[],"C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\PageContext.js",[],["37","38"],"C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\Header.js",[],["39","40"],"C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\utils\\GBAPI.js",[],"C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\Book.js",["41","42"],"import React, { useContext } from 'react';\r\nimport API from '../utils/API';\r\nimport { BookContext } from './BookContext';\r\nimport { PageContext } from './PageContext';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    media: {\r\n        width: \"20vw\",\r\n        margin: \"20px\"\r\n    },\r\n    body: {\r\n        width: \"60vw\"\r\n    },\r\n    buttons: {\r\n        alignItems: \"center\"\r\n    }\r\n});\r\n\r\nconst Book = ({ title, author, description, image, link, id }) => {\r\n    const classes = useStyles();\r\n\r\n    const [books, setBooks] = useContext(BookContext);\r\n    const [page, setPage] = useContext(PageContext)\r\n\r\n    const addBook = e => {\r\n        books.forEach(book => {\r\n            if (book.id === e.target.value) {\r\n                API.saveBook({\r\n                    id: book.id,\r\n                    title: book.volumeInfo.title,\r\n                    author: book.volumeInfo.authors[0],\r\n                    description: book.volumeInfo.description,\r\n                    image: book.volumeInfo.imageLinks.thumbnail,\r\n                    link: book.infoLink\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    const removeBook = e => {\r\n        API.getAllBooks().then(result => {\r\n            let library = result.data.data;\r\n            library.forEach(book => {\r\n                if (book._id === e.target.value) {\r\n                    API.deleteBook(book._id)\r\n                }\r\n            })\r\n        })\r\n    };\r\n\r\n    if (page === \"search\") {\r\n        return (\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {author}\r\n                    </Typography>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\" component=\"p\" className={classes.body}>\r\n                                {description}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <CardMedia className={classes.media}\r\n                                component=\"img\"\r\n                                alt=\"Book Cover\"\r\n                                image={image}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions className={classes.buttons}>\r\n                    <Button size=\"small\" href={link}>Learn More on Google Books</Button>\r\n                    <IconButton onClick={addBook} value={id}>\r\n                        <SaveIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card >\r\n        );\r\n    };\r\n\r\n    if (page === \"saved\") {\r\n        return (\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {author}\r\n                    </Typography>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\" component=\"p\" className={classes.body}>\r\n                                {description}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <CardMedia className={classes.media}\r\n                                component=\"img\"\r\n                                alt=\"Book Cover\"\r\n                                image={image}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions className={classes.buttons}>\r\n                    <Button size=\"small\" href={link}>Learn More on Google Books</Button>\r\n                    <IconButton onClick={removeBook} value={id}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card >\r\n        )\r\n    }\r\n};\r\n\r\nexport default Book;","C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\PageBody.js",["43"],"C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\utils\\API.js",[],"C:\\Users\\asmar\\code\\2021\\book-search\\client\\src\\components\\Search.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":43,"column":19,"nodeType":"52","messageId":"53","endLine":43,"endColumn":27},{"ruleId":"50","severity":1,"message":"54","line":44,"column":18,"nodeType":"52","messageId":"53","endLine":44,"endColumn":25},{"ruleId":"50","severity":1,"message":"54","line":8,"column":18,"nodeType":"52","messageId":"53","endLine":8,"endColumn":25},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-unused-vars","'setBooks' is assigned a value but never used.","Identifier","unusedVar","'setPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]