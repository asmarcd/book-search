{"version":3,"sources":["utils/GBAPI.js","components/PageContext.js","utils/API.js","components/BookContext.js","components/Book.js","components/Search.js","components/Saved.js","components/PageBody.js","components/Header.js","components/Footer.js","components/Nav.js","App.js","index.js"],"names":["GBAPI","titleSearch","titleInput","fetch","process","then","response","json","module","exports","PageContext","createContext","PageProvider","props","useState","page","setPage","Provider","value","children","API","axios","create","baseURL","apis","getAllBooks","get","saveBook","newBook","post","deleteBook","id","delete","BookContext","BookProvider","books","setBooks","useStyles","makeStyles","root","minWidth","title","fontSize","pos","marginBottom","media","width","margin","body","buttons","alignItems","Book","author","description","image","link","deleteItem","classes","useContext","open","setOpen","handleClose","e","r","Card","className","variant","CardContent","Typography","component","color","Grid","container","item","CardMedia","alt","CardActions","Button","size","href","IconButton","onClick","forEach","book","target","volumeInfo","authors","imageLinks","thumbnail","infoLink","Snackbar","autoHideDuration","onClose","Alert","severity","result","data","_id","Search","bookSearch","setBookSearch","Input","placeholder","onChange","results","items","map","Saved","library","setLibrary","useEffect","bookList","deleteItemHandler","PageBody","Header","Footer","Nav","updatePage","AppBar","Toolbar","justify","spacing","ButtonGroup","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cb813d6.chunk.js","sourcesContent":["const GBAPI = {\r\n    titleSearch: function (titleInput) {\r\n        return fetch(`https://www.googleapis.com/books/v1/volumes?q=${titleInput}+intitle&key=${process.env.REACT_APP_GOOGLE_API_KEY}`)\r\n            .then(response => response.json())\r\n    }\r\n}\r\n\r\nmodule.exports = GBAPI;","import React, {useState, createContext} from 'react';\r\n\r\nexport const PageContext = createContext();\r\n\r\nexport const PageProvider = props => {\r\n    const [page, setPage] = useState(\"search\");\r\n\r\n    return (\r\n        <PageContext.Provider value={[page, setPage]}>\r\n            {props.children}\r\n        </PageContext.Provider>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n    baseURL: `/api`\r\n});\r\n\r\nexport const getAllBooks = () => API.get('/books');\r\nexport const saveBook = newBook => API.post('/book', newBook);\r\nexport const deleteBook = id => API.delete(`/book/${id}`);\r\n\r\nconst apis = {\r\n    getAllBooks,\r\n    saveBook,\r\n    deleteBook\r\n}\r\n\r\nexport default apis","import React, {useState, createContext} from 'react';\r\n\r\nexport const BookContext = createContext();\r\n\r\nexport const BookProvider = props => {\r\n    const [books, setBooks] = useState([])\r\n\r\n    return (\r\n        <BookContext.Provider value={[books, setBooks]}>\r\n            {props.children}\r\n        </BookContext.Provider>\r\n    )\r\n}","import React, { useContext, useState } from 'react';\r\nimport API from '../utils/API';\r\nimport { BookContext } from './BookContext';\r\nimport { PageContext } from './PageContext';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    media: {\r\n        width: \"20vw\",\r\n        margin: \"20px\"\r\n    },\r\n    body: {\r\n        width: \"60vw\"\r\n    },\r\n    buttons: {\r\n        alignItems: \"center\"\r\n    }\r\n});\r\n\r\nconst Book = ({ title, author, description, image, link, id, deleteItem }) => {\r\n    const classes = useStyles();\r\n\r\n    const [books, setBooks] = useContext(BookContext);\r\n    const [page, setPage] = useContext(PageContext)\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const addBook = e => {\r\n        books.forEach(book => {\r\n            if (book.id === e.target.value) {\r\n                API.saveBook({\r\n                    id: book.id,\r\n                    title: book.volumeInfo.title,\r\n                    author: book.volumeInfo.authors[0],\r\n                    description: book.volumeInfo.description,\r\n                    image: book.volumeInfo.imageLinks.thumbnail,\r\n                    link: book.infoLink\r\n                })\r\n            }\r\n        })\r\n        setOpen(true);\r\n    };\r\n\r\n    const removeBook = e => {\r\n        API.getAllBooks().then(result => {\r\n            let library = result.data.data;\r\n            library.forEach(book => {\r\n                if (book._id === e.target.value) {\r\n                    API.deleteBook(book._id)\r\n                }\r\n            })\r\n            deleteItem();\r\n        })\r\n    };\r\n\r\n    const handleClose = (e, r) => {\r\n        if (r===\"clickaway\") {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    if (page === \"search\") {\r\n        return (\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {author}\r\n                    </Typography>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\" component=\"p\" className={classes.body}>\r\n                                {description}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <CardMedia className={classes.media}\r\n                                component=\"img\"\r\n                                alt=\"Book Cover\"\r\n                                image={image}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions className={classes.buttons}>\r\n                    <Button size=\"small\" href={link}>Learn More on Google Books</Button>\r\n                    <IconButton onClick={addBook} value={id}>\r\n                        <SaveIcon />\r\n                    </IconButton>\r\n                    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                        <Alert onClose={handleClose} severity=\"success\">\r\n                            Book Saved!\r\n                        </Alert>\r\n                    </Snackbar>\r\n\r\n                </CardActions>\r\n            </Card >\r\n        );\r\n    };\r\n\r\n    if (page === \"saved\") {\r\n        return (\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {author}\r\n                    </Typography>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\" component=\"p\" className={classes.body}>\r\n                                {description}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <CardMedia className={classes.media}\r\n                                component=\"img\"\r\n                                alt=\"Book Cover\"\r\n                                image={image}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions className={classes.buttons}>\r\n                    <Button size=\"small\" href={link}>Learn More on Google Books</Button>\r\n                    <IconButton onClick={removeBook} value={id}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card >\r\n        )\r\n    }\r\n};\r\n\r\nexport default Book;","import React, { useState, useContext } from 'react';\r\nimport GBAPI from '../utils/GBAPI';\r\nimport Book from './Book';\r\nimport { BookContext } from './BookContext'\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Search = () => {\r\n\r\n    const [bookSearch, setBookSearch] = useState(\"\");\r\n    const [books, setBooks] = useContext(BookContext)\r\n\r\n    const manageInput = e => {\r\n        setBookSearch(e.target.value)\r\n    }\r\n\r\n    const googleBooksSearch = () => {\r\n        GBAPI.titleSearch(bookSearch)\r\n            .then(results => {\r\n                setBooks(results.items)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Typography>\r\n            <Input placeholder=\"Search Books by Title\" onChange={manageInput} value={bookSearch.title} />\r\n            <Button onClick={googleBooksSearch}>Search</Button>\r\n            <div>\r\n                {books.map(book => {\r\n                    if (book.volumeInfo.authors) {\r\n                        return (\r\n                            <Book title={book.volumeInfo.title} author={book.volumeInfo.authors[0]} description={book.volumeInfo.description} image={book.volumeInfo.imageLinks.thumbnail} link={book.volumeInfo.infoLink} id={book.id} />\r\n                        )\r\n                    } else {\r\n                        return (\r\n                        <Book title={book.volumeInfo.title} author=\"\" description={book.volumeInfo.description} image={book.volumeInfo.imageLinks.thumbnail} link={book.volumeInfo.infoLink} id={book.id} />\r\n                        )\r\n                    }\r\n                }\r\n                )}\r\n            </div>\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { useState, useEffect } from 'react';\r\nimport API from '../utils/API';\r\nimport Book from \"./Book\"\r\n\r\n\r\nconst Saved = () => {\r\n\r\n    const [library, setLibrary] = useState([]);\r\n\r\n    useEffect(() => {\r\n        API.getAllBooks().then(bookList => {\r\n            setLibrary(bookList.data.data)\r\n        })\r\n    }, []);\r\n\r\n    const deleteItemHandler = () => {\r\n        API.getAllBooks().then(bookList => {\r\n            setLibrary(bookList.data.data)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {library.map(book => (\r\n                <Book title={book.title} author={book.author} description={book.description} image={book.image} link={book.link} id={book._id} deleteItem={deleteItemHandler} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Saved","import React, { useContext } from 'react';\r\nimport { PageContext } from './PageContext';\r\nimport Search from './Search';\r\nimport Saved from './Saved';\r\n\r\n\r\nconst PageBody = () => {\r\n    const [page, setPage] = useContext(PageContext);\r\n\r\n    if(page===\"search\"){\r\n        return (\r\n            <Search />\r\n        );\r\n    } else if (page===\"saved\"){\r\n        return (\r\n            <Saved />\r\n        );\r\n    }\r\n};\r\n\r\nexport default PageBody;","\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h3>Search for and Save Books you're Interested in</h3>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Made by Chris Asmar with ReactJS and MaterialUI</p>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React, { useContext } from 'react';\r\nimport { PageContext } from './PageContext'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { ButtonGroup, Typography } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst Nav = props => {\r\n\r\n    const [page, setPage] = useContext(PageContext);\r\n\r\n    const updatePage = e => {\r\n        setPage(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <AppBar>\r\n            <Toolbar>\r\n                <Grid\r\n                    justify=\"space-between\"\r\n                    container\r\n                    spacing={24}\r\n                >\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\">\r\n                            Google Books Search\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <ButtonGroup variant=\"contained\">\r\n                            <Button value=\"search\" onClick={updatePage}>\r\n                                Search\r\n                            </Button>\r\n                            <Button value=\"saved\" onClick={updatePage}>\r\n                                Saved Books\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n};\r\n\r\nexport default Nav;","import { Typography } from \"@material-ui/core\";\nimport PageBody from \"./components/PageBody\"\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Nav from './components/Nav';\nimport './App.css';\nimport { PageProvider } from './components/PageContext';\nimport { BookProvider } from './components/BookContext'\n\nfunction App() {\n\n  return (\n    <PageProvider>\n      <BookProvider>\n        <div className=\"App\">\n          <Typography >\n            <Nav />\n            <Header />\n            <PageBody />\n            <Footer />\n          </Typography>\n        </div>\n      </BookProvider>\n    </PageProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}