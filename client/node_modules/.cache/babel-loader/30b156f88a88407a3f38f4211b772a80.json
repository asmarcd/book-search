{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/asmar/Code/2021/book-search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import GBAPI from'../utils/GBAPI';import Book from'./Book';import{BookContext}from'./BookContext';import{Typography}from'@material-ui/core';import Input from'@material-ui/core/Input';import Button from'@material-ui/core/Button';var Search=function Search(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),bookSearch=_useState2[0],setBookSearch=_useState2[1];var _useContext=useContext(BookContext),_useContext2=_slicedToArray(_useContext,2),books=_useContext2[0],setBooks=_useContext2[1];var manageInput=function manageInput(e){setBookSearch(e.target.value);};var googleBooksSearch=function googleBooksSearch(){console.log(bookSearch);GBAPI.titleSearch(bookSearch).then(function(results){setBooks(results.items);});};return/*#__PURE__*/ (// TODO: Typography below needs to be updated now that I get how it works.\n// TODO: the google books api doesn't always have all the below info. if it's missing somethnig, like the book doesn't have an author, or you get no results, it crashes the app when you submit the search.\n_jsxs(Typography,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Search by Title\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"Title\",onChange:manageInput,value:bookSearch.title}),/*#__PURE__*/_jsx(Button,{onClick:googleBooksSearch,children:\"Search\"}),/*#__PURE__*/_jsx(\"div\",{children:books.map(function(book){return/*#__PURE__*/_jsx(Book,{title:book.volumeInfo.title,author:book.volumeInfo.authors[0],description:book.volumeInfo.description,image:book.volumeInfo.imageLinks.thumbnail,link:book.volumeInfo.infoLink,id:book.id});})})]}));};export default Search;","map":{"version":3,"sources":["C:/Users/asmar/code/2021/book-search/client/src/components/Search.js"],"names":["React","useState","useContext","GBAPI","Book","BookContext","Typography","Input","Button","Search","bookSearch","setBookSearch","books","setBooks","manageInput","e","target","value","googleBooksSearch","console","log","titleSearch","then","results","items","title","map","book","volumeInfo","authors","description","imageLinks","thumbnail","infoLink","id"],"mappings":"0PAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,WAAT,KAA4B,eAA5B,CAEA,OAASC,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,eAEmBR,QAAQ,CAAC,EAAD,CAF3B,wCAEVS,UAFU,eAEEC,aAFF,+BAGST,UAAU,CAACG,WAAD,CAHnB,4CAGVO,KAHU,iBAGHC,QAHG,iBAKjB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,CAAC,CAAI,CACrBJ,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CACH,CAFD,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BC,OAAO,CAACC,GAAR,CAAYV,UAAZ,EACAP,KAAK,CAACkB,WAAN,CAAkBX,UAAlB,EACKY,IADL,CACU,SAAAC,OAAO,CAAI,CACbV,QAAQ,CAACU,OAAO,CAACC,KAAT,CAAR,CACH,CAHL,EAIH,CAND,CAQA,oBACI;AACA;AACA,MAAC,UAAD,yBACI,sCADJ,cAEI,KAAC,KAAD,EAAO,WAAW,CAAC,OAAnB,CAA2B,QAAQ,CAAEV,WAArC,CAAkD,KAAK,CAAEJ,UAAU,CAACe,KAApE,EAFJ,cAGI,KAAC,MAAD,EAAQ,OAAO,CAAEP,iBAAjB,oBAHJ,cAII,qBACKN,KAAK,CAACc,GAAN,CAAU,SAAAC,IAAI,qBACX,KAAC,IAAD,EAAM,KAAK,CAAEA,IAAI,CAACC,UAAL,CAAgBH,KAA7B,CAAoC,MAAM,CAAEE,IAAI,CAACC,UAAL,CAAgBC,OAAhB,CAAwB,CAAxB,CAA5C,CAAwE,WAAW,CAAEF,IAAI,CAACC,UAAL,CAAgBE,WAArG,CAAkH,KAAK,CAAEH,IAAI,CAACC,UAAL,CAAgBG,UAAhB,CAA2BC,SAApJ,CAA+J,IAAI,CAAEL,IAAI,CAACC,UAAL,CAAgBK,QAArL,CAA+L,EAAE,CAAEN,IAAI,CAACO,EAAxM,EADW,EAAd,CADL,EAJJ,GAHJ,EAeH,CAhCD,CAkCA,cAAezB,CAAAA,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport GBAPI from '../utils/GBAPI';\r\nimport Book from './Book';\r\nimport { BookContext } from './BookContext'\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Search = () => {\r\n\r\n    const [bookSearch, setBookSearch] = useState(\"\");\r\n    const [books, setBooks] = useContext(BookContext)\r\n\r\n    const manageInput = e => {\r\n        setBookSearch(e.target.value)\r\n    }\r\n\r\n    const googleBooksSearch = () => {\r\n        console.log(bookSearch)\r\n        GBAPI.titleSearch(bookSearch)\r\n            .then(results => {\r\n                setBooks(results.items)\r\n            })\r\n    }\r\n\r\n    return (\r\n        // TODO: Typography below needs to be updated now that I get how it works.\r\n        // TODO: the google books api doesn't always have all the below info. if it's missing somethnig, like the book doesn't have an author, or you get no results, it crashes the app when you submit the search.\r\n        <Typography>\r\n            <p>Search by Title</p>\r\n            <Input placeholder=\"Title\" onChange={manageInput} value={bookSearch.title} />\r\n            <Button onClick={googleBooksSearch}>Search</Button>\r\n            <div>\r\n                {books.map(book => (\r\n                    <Book title={book.volumeInfo.title} author={book.volumeInfo.authors[0]} description={book.volumeInfo.description} image={book.volumeInfo.imageLinks.thumbnail} link={book.volumeInfo.infoLink} id={book.id} />\r\n                ))}\r\n            </div>\r\n\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}