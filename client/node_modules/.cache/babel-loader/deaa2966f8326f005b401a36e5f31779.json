{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\asmar\\\\code\\\\2021\\\\book-search\\\\src\\\\components\\\\Book.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport API from '../utils/API';\nimport { BookContext } from './BookContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport SaveIcon from '@material-ui/icons/Save';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  media: {\n    width: \"20vw\",\n    margin: \"20px\"\n  },\n  body: {\n    width: \"60vw\"\n  },\n  buttons: {\n    alignItems: \"center\"\n  }\n});\n\nconst Book = ({\n  title,\n  author,\n  description,\n  image,\n  link,\n  id\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [books, setBooks] = useContext(BookContext);\n\n  const addBook = e => {\n    console.log(e.target.value);\n    console.log(books);\n    books.forEach(book => {\n      if (book.id === e.target.value) {\n        API.saveBook({\n          title: book.volumeInfo.title,\n          author: book.volumeInfo.authors[0],\n          description: book.volumeInfo.description,\n          image: book.volumeInfo.imageLinks.thumbnail,\n          link: book.infoLink\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.pos,\n        color: \"textSecondary\",\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            component: \"p\",\n            className: classes.body,\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.media,\n            component: \"img\",\n            alt: \"Book Cover\",\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      className: classes.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        href: link,\n        children: \"Learn More on Google Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: addBook,\n        value: id,\n        children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Book, \"esIEN6SXZmuYJPiqr5REMyukZKk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Book;\nexport default Book;\n\nvar _c;\n\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"sources":["C:/Users/asmar/code/2021/book-search/src/components/Book.js"],"names":["React","useState","useContext","API","BookContext","makeStyles","Card","CardActions","CardContent","Button","Typography","CardMedia","SaveIcon","IconButton","Grid","useStyles","root","minWidth","title","fontSize","pos","marginBottom","media","width","margin","body","buttons","alignItems","Book","author","description","image","link","id","classes","books","setBooks","addBook","e","console","log","target","value","forEach","book","saveBook","volumeInfo","authors","imageLinks","thumbnail","infoLink"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport API from '../utils/API'\r\nimport { BookContext } from './BookContext'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    media: {\r\n        width: \"20vw\",\r\n        margin: \"20px\"\r\n    },\r\n    body: {\r\n        width: \"60vw\"\r\n    },\r\n    buttons: {\r\n        alignItems: \"center\"\r\n    }\r\n});\r\n\r\nconst Book = ({ title, author, description, image, link, id }) => {\r\n    const classes = useStyles();\r\n\r\n    const [books, setBooks] = useContext(BookContext);\r\n\r\n    const addBook = e => {\r\n        console.log(e.target.value)\r\n        console.log(books)\r\n        books.forEach(book => {\r\n            if (book.id === e.target.value) {\r\n                API.saveBook({\r\n                    title: book.volumeInfo.title,\r\n                    author: book.volumeInfo.authors[0],\r\n                    description: book.volumeInfo.description,\r\n                    image: book.volumeInfo.imageLinks.thumbnail,\r\n                    link: book.infoLink\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {title}\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {author}\r\n                </Typography>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Typography variant=\"body2\" component=\"p\" className={classes.body}>\r\n                            {description}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <CardMedia className={classes.media}\r\n                            component=\"img\"\r\n                            alt=\"Book Cover\"\r\n                            image={image}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <CardActions className={classes.buttons}>\r\n                <Button size=\"small\" href={link}>Learn More on Google Books</Button>\r\n                <IconButton onClick={addBook} value={id}>\r\n                    <SaveIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default Book;"]},"metadata":{},"sourceType":"module"}