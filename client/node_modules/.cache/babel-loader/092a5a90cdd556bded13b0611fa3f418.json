{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\asmar\\\\code\\\\2021\\\\book-search\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport API from './../utils/API';\nimport Book from './Book';\n\nconst Search = () => {\n  _s();\n\n  const [bookSearch, setBookSearch] = useState(\"\");\n  const [books, setBooks] = useState([]);\n\n  const manageInput = e => {\n    setBookSearch(e.target.value);\n  };\n\n  const googleBooksSearch = () => {\n    setBooks([]);\n    API.titleSearch(bookSearch).then(results => {\n      setBooks(results.items);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Search by Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Title\",\n      onChange: manageInput,\n      value: bookSearch.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: googleBooksSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(Book, {\n        title: book.volumeInfo.title,\n        author: book.volumeInfo.authors[0],\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks.thumbnail,\n        link: book.volumeInfo.infoLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"SOLN8dZxnCaoGxB0IZScy5VJp+s=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/asmar/code/2021/book-search/src/components/Search.js"],"names":["React","useState","Typography","Input","Button","API","Book","Search","bookSearch","setBookSearch","books","setBooks","manageInput","e","target","value","googleBooksSearch","titleSearch","then","results","items","title","map","book","volumeInfo","authors","description","imageLinks","thumbnail","infoLink"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,WAAW,GAAGC,CAAC,IAAI;AACrBJ,IAAAA,aAAa,CAAEI,CAAC,CAACC,MAAF,CAASC,KAAX,CAAb;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BL,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAN,IAAAA,GAAG,CAACY,WAAJ,CAAgBT,UAAhB,EACCU,IADD,CACMC,OAAO,IAAI;AACbR,MAAAA,QAAQ,CAACQ,OAAO,CAACC,KAAT,CAAR;AACH,KAHD;AAIH,GAND;;AAQA,sBACI,QAAC,UAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA,QAAC,KAAD;AAAO,MAAA,WAAW,EAAG,OAArB;AAA6B,MAAA,QAAQ,EAAIR,WAAzC;AAAsD,MAAA,KAAK,EAAEJ,UAAU,CAACa;AAAxE;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAIL,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA,gBACKN,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD;AAAM,QAAA,KAAK,EAAIA,IAAI,CAACC,UAAL,CAAgBH,KAA/B;AAAsC,QAAA,MAAM,EAAIE,IAAI,CAACC,UAAL,CAAgBC,OAAhB,CAAwB,CAAxB,CAAhD;AAA4E,QAAA,WAAW,EAAIF,IAAI,CAACC,UAAL,CAAgBE,WAA3G;AAAwH,QAAA,KAAK,EAAIH,IAAI,CAACC,UAAL,CAAgBG,UAAhB,CAA2BC,SAA5J;AAAuK,QAAA,IAAI,EAAIL,IAAI,CAACC,UAAL,CAAgBK;AAA/L;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA9BD;;GAAMtB,M;;KAAAA,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport API from './../utils/API';\r\nimport Book from './Book';\r\n\r\nconst Search = () => {\r\n\r\n    const [bookSearch, setBookSearch] = useState(\"\");\r\n    const [books, setBooks] = useState([])\r\n\r\n    const manageInput = e => {\r\n        setBookSearch (e.target.value)\r\n    }\r\n\r\n    const googleBooksSearch = () => {\r\n        setBooks([])\r\n        API.titleSearch(bookSearch)\r\n        .then(results => {\r\n            setBooks(results.items)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Typography>\r\n            <p>Search by Title</p>\r\n        <Input placeholder = \"Title\" onChange = {manageInput} value={bookSearch.title}/>\r\n        <Button onClick = {googleBooksSearch}>Search</Button>\r\n        <div>\r\n            {books.map(book => (\r\n                <Book title = {book.volumeInfo.title} author = {book.volumeInfo.authors[0]} description = {book.volumeInfo.description} image = {book.volumeInfo.imageLinks.thumbnail} link = {book.volumeInfo.infoLink}/>\r\n            ))}\r\n        </div>\r\n        \r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}