{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\asmar\\\\code\\\\2021\\\\book-search\\\\client\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport GBAPI from '../utils/GBAPI';\nimport Book from './Book';\nimport { BookContext } from './BookContext';\nimport { Typography } from '@material-ui/core';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\n\nconst Search = () => {\n  _s();\n\n  let setAuthor = \"\";\n  const [bookSearch, setBookSearch] = useState(\"\");\n  const [books, setBooks] = useContext(BookContext);\n\n  const manageInput = e => {\n    setBookSearch(e.target.value);\n  };\n\n  const googleBooksSearch = () => {\n    console.log(bookSearch);\n    GBAPI.titleSearch(bookSearch).then(results => {\n      setBooks(results.items);\n\n      if (books.volumeInfo.authors) {\n        setAuthor = results.items.volumeInfo.authors[0];\n      }\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // TODO: Typography below needs to be updated now that I get how it works.\n    // TODO: the google books api doesn't always have all the below info. if it's missing somethnig, like the book doesn't have an author, or you get no results, it crashes the app when you submit the search.\n    _jsxDEV(Typography, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search by Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Title\",\n        onChange: manageInput,\n        value: bookSearch.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: googleBooksSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: books.map(book => /*#__PURE__*/_jsxDEV(Book, {\n          title: book.volumeInfo.title,\n          author: setAuthor,\n          description: book.volumeInfo.description,\n          image: book.volumeInfo.imageLinks.thumbnail,\n          link: book.volumeInfo.infoLink,\n          id: book.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Search, \"J8sB9eFNFdkqwVSaC/XP/QoFKx8=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/asmar/code/2021/book-search/client/src/components/Search.js"],"names":["React","useState","useContext","GBAPI","Book","BookContext","Typography","Input","Button","Search","setAuthor","bookSearch","setBookSearch","books","setBooks","manageInput","e","target","value","googleBooksSearch","console","log","titleSearch","then","results","items","volumeInfo","authors","title","map","book","description","imageLinks","thumbnail","infoLink","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,MAAIC,SAAS,GAAG,EAAhB;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACG,WAAD,CAApC;;AAEA,QAAMU,WAAW,GAAGC,CAAC,IAAI;AACrBJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACAR,IAAAA,KAAK,CAACmB,WAAN,CAAkBX,UAAlB,EACKY,IADL,CACUC,OAAO,IAAI;AACbV,MAAAA,QAAQ,CAACU,OAAO,CAACC,KAAT,CAAR;;AACA,UAAIZ,KAAK,CAACa,UAAN,CAAiBC,OAArB,EAA8B;AAC1BjB,QAAAA,SAAS,GAAGc,OAAO,CAACC,KAAR,CAAcC,UAAd,CAAyBC,OAAzB,CAAiC,CAAjC,CAAZ;AACH;AACJ,KANL;AAOH,GATD;;AAWA;AAAA;AACI;AACA;AACA,YAAC,UAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC,OAAnB;AAA2B,QAAA,QAAQ,EAAEZ,WAArC;AAAkD,QAAA,KAAK,EAAEJ,UAAU,CAACiB;AAApE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAET,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBACKN,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEA,IAAI,CAACJ,UAAL,CAAgBE,KAA7B;AAAoC,UAAA,MAAM,EAAElB,SAA5C;AAAuD,UAAA,WAAW,EAAEoB,IAAI,CAACJ,UAAL,CAAgBK,WAApF;AAAiG,UAAA,KAAK,EAAED,IAAI,CAACJ,UAAL,CAAgBM,UAAhB,CAA2BC,SAAnI;AAA8I,UAAA,IAAI,EAAEH,IAAI,CAACJ,UAAL,CAAgBQ,QAApK;AAA8K,UAAA,EAAE,EAAEJ,IAAI,CAACK;AAAvL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAeH,CArCD;;GAAM1B,M;;KAAAA,M;AAuCN,eAAeA,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport GBAPI from '../utils/GBAPI';\r\nimport Book from './Book';\r\nimport { BookContext } from './BookContext'\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Search = () => {\r\n\r\n    let setAuthor = \"\";\r\n\r\n    const [bookSearch, setBookSearch] = useState(\"\");\r\n    const [books, setBooks] = useContext(BookContext)\r\n\r\n    const manageInput = e => {\r\n        setBookSearch(e.target.value)\r\n    }\r\n\r\n    const googleBooksSearch = () => {\r\n        console.log(bookSearch)\r\n        GBAPI.titleSearch(bookSearch)\r\n            .then(results => {\r\n                setBooks(results.items)\r\n                if (books.volumeInfo.authors) {\r\n                    setAuthor = results.items.volumeInfo.authors[0]\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        // TODO: Typography below needs to be updated now that I get how it works.\r\n        // TODO: the google books api doesn't always have all the below info. if it's missing somethnig, like the book doesn't have an author, or you get no results, it crashes the app when you submit the search.\r\n        <Typography>\r\n            <p>Search by Title</p>\r\n            <Input placeholder=\"Title\" onChange={manageInput} value={bookSearch.title} />\r\n            <Button onClick={googleBooksSearch}>Search</Button>\r\n            <div>\r\n                {books.map(book => (\r\n                    <Book title={book.volumeInfo.title} author={setAuthor} description={book.volumeInfo.description} image={book.volumeInfo.imageLinks.thumbnail} link={book.volumeInfo.infoLink} id={book.id} />\r\n                ))}\r\n            </div>\r\n\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}